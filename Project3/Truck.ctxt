#BlueJ class context
comment0.target=Truck
comment0.text=\n\ The\ class\ determines\ determines\ the\ functionality\ of\ a\ truck.\ A\ truck,\ ideally,\ takes\ in\ the\ location\ of\ all\ warehouses\ and\ determines\ where\n\ to\ move\ next.\ It\ performs\ loading\ and\ unloading\ actiions\ through\ action().\ There\ are\ helper\ methods,\ calculateDist()\ and\ findNextDest()\ to\ \n\ help\ th\ etruck\ identify\ its\ next\ destination.\n\n\ @author\ Padmanabh\ Kaushik\n\ @version\ 5/3/2024\n
comment1.params=load\ currLoc\ destinations\ warehouses\ id
comment1.target=Truck(int,\ float[],\ float[][],\ WareHouse[],\ java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Truck\n\ @param\ load\ load\ of\ the\ strck\n\ @param\ currLoc\ current\ location\ of\ the\ truck\n\ @param\ destinations\ array\ of\ all\ destinations\ of\ warehouses\n\ @param\ warehouses\ array\ of\ all\ created\ warehouses\n\ @param\ id\ id\ of\ the\ truck\n
comment10.params=destinations\ currLoc\ otherDest
comment10.target=float[]\ findNearestDestination(float[][],\ float[],\ float[])
comment10.text=\n\ Identifies\ the\ nearest\ location\ to\ go\ to\n\ @param\ destinations\ coordinates\ of\ the\ destinations\ to\ go\ to\n\ @param\ currLoc\ current\ location\ coordinates\n\ @param\ otherDest\ coordinate\ of\ the\ next\ dropOff\ location\n
comment11.params=
comment11.target=int\ noCyclesToDest()
comment11.text=\n\ Calculates\ the\ number\ of\ cycles\ needed\ to\ reach\ the\ destination\n\ @return\ cycles\ no.\ of\ action()\ cycles\ needed\ to\ reach\ destination\n
comment12.params=point1\ point2
comment12.target=float\ calculateDistance(float[],\ float[])
comment12.text=\n\ Calculates\ the\ distance\ between\ two\ points\n\ @param\ point1\ array\ containing\ x,\ y\ coordinates\ of\ the\ first\ point\n\ @param\ point2\ array\ containing\ x,\ y\ coordinates\ of\ the\ second\ point\n\ @return\ distance\ distance\ between\ two\ points\n
comment13.params=
comment13.target=int\ findWHIndex()
comment13.text=\n\ If\ the\ truck\ determines\ that\ its\ next\ destination\ warehouse,\ the\ method\ identifies\ the\ index\ of\ the\ warehouse\ from\ the\ array\ of\ warehouses\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ Returns\ the\ ID\ of\ each\ truck\n
comment15.params=
comment15.target=java.lang.String\ toArrayString()
comment15.text=\n\ Returns\ the\ string\ expression\ of\ the\ internal\ stack\ of\ the\ truck\n\ @return\ line\ the\ string\ expression\ for\ the\ internal\ stack\ of\ the\ truck\n
comment16.params=
comment16.target=void\ updateCurrentLocLoad()
comment16.text=\n\ Updates\ the\ current\ location\ of\ the\ truck.\ Works\ depending\ on\ the\ locction\ of\ the\ warehouse\ where\ the\ truck\ is\ located\n
comment17.params=
comment17.target=float[]\ getNextDest()
comment17.text=\n\ Returns\ the\ next\ destination\ for\ the\ trucl\n\ @return\ nextDest\ the\ next\ destination\ for\ the\ truck\n
comment2.params=load\ id
comment2.target=Truck(int,\ java.lang.String)
comment2.text=\n\ This\ contructor\ is\ used\ for\ testing\ purposes\ only.\n\ @param\ load\ load\ of\ the\ truck\n\ @param\ id\ id\ of\ the\ truck\n
comment3.params=load\ id\ filled\ dest
comment3.target=Truck(int,\ java.lang.String,\ int,\ float[])
comment3.text=\n\ This\ is\ a\ constructor\ developed\ for\ tseting\ purposes\ only\n\ @param\ load\ load\ of\ the\ truck\n\ @param\ id\ id\ of\ the\ struck\n\ @param\ filled\ no\ of\ filled\ slots\ in\ the\ TruckStack\n\ @param\ dest\ the\ final\ destination\ of\ the\ shipments\ in\ the\ truck\n
comment4.params=load\ currLoc\ destinations\ warehouses\ id\ filled\ dest
comment4.target=Truck(int,\ float[],\ float[][],\ WareHouse[],\ java.lang.String,\ int,\ float[])
comment4.text=\n\ Constructor\ for\ the\ truck\ object.\ Used\ in\ implementation.\n\ @param\ load\ the\ load\ of\ the\ truck\n\ @param\ currLoc\ the\ current\ location\ of\ the\ truck\n\ *\ @param\ destinations\ array\ of\ all\ destinations\ of\ warehouses\n\ @param\ warehouses\ array\ of\ all\ created\ warehouses\n\ @param\ id\ id\ of\ the\ truck\n\ @param\ dest\ the\ next\ destination\ truck\ is\ heading\ to\n
comment5.params=
comment5.target=boolean\ hasSpace()
comment5.text=\n\ Determines\ if\ the\ internal\ stack\ of\ the\ truck\ has\ space\n\ @return\ bool\ true\ if\ the\ stack\ has\ space,\ else\ returns\ false\n
comment6.params=
comment6.target=int\ getOccupancy()
comment6.text=\n\ Determines\ the\ current\ occupany\ of\ a\ truck\n\ @return\ occupancy\ the\ current\ occupancy\ of\ a\ truck\n
comment7.params=
comment7.target=TruckStack\ getStorage()
comment7.text=\n\ Returns\ the\ internal\ stack\ of\ the\ truck\n\ @return\ storage\ the\ internal\ stack\ of\ the\ truck\n
comment8.params=
comment8.target=java.lang.String\ log_status()
comment8.text=\n\ Notes\ the\ per-cycle\ status\ of\ the\ truck\n\ @return\ line\ the\ log\ status\ of\ the\ truck\n
comment9.params=
comment9.target=void\ action()
comment9.text=\n\ Initiates\ the\ loading,\ unloading,\ and\ motion\ of\ the\ truck.\ Determines\ the\ next\ destination\ after\ a\ loading/unloading\ operation\ has\ been\ \n\ done.\n
numComments=18
