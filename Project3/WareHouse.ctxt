#BlueJ class context
comment0.target=WareHouse
comment0.text=\n\ The\ class\ describes\ the\ functioning\ of\ a\ warehouse.\ On\ being\ created,\ a\ warehouse\ initializes\ the\ a\ number\ of\ loading\ stations\ and\ shipments\ between\n\ .\ Thereafter,\ as\ trucks\ ae\ added\ to\ the\ loading\ stations,\ the\ warehouse\ loads\ and\ unloads\ the\ trucks\ into\ the\ warehouses.\n\n\ @author\ Padmanabh\ Kaushik\n\ @version\ 5/5/2024\n
comment1.params=id\ currLoc\ noDocks\ shipToDeliver\ destinations
comment1.target=WareHouse(java.lang.String,\ float[],\ int,\ int,\ float[][])
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ WareHouse\n\ @param\ id\ id\ of\ the\ warehouse\n\ @param\ currLoc\ current\ location\ if\ the\ warehouse\ floar[]\ (x,\ y)\n\ @param\ noDocks\ no\ of\ loading\ docks\ in\ the\ warehouse\n\ @param\ shipToDeliver\ no\ of\ shipments\ to\ deliver\n\ @param\ destinations\ array\ of\ all\ warehouse\ locations\n
comment10.params=
comment10.target=ArrayBasedStack\ getDelivered()
comment10.text=\n\ Returns\ the\ array\ of\ delivered\ items\n\ @return\ received\ ArrayBasedStack\ of\ received\ items\n
comment11.params=
comment11.target=float[]\ getLocation()
comment11.text=\n\ Returns\ the\ current\ location\n\ @return\ (x,y)\ float[2]\ array\ of\ coordinates\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Returns\ the\ string\ action\ of\ the\ warehouse\n\ @rturn\ line\ the\ string\ expression\ of\ the\ warehouse\ loading\ stations\n
comment13.params=
comment13.target=ArrayBasedStack\ getWaitLine()
comment13.text=\n\ Returns\ the\ waitline\ of\ the\ warehouse\n\ @return\ waitLine\ waitlist\ for\ the\ loading\ docks\n
comment2.params=id\ currLoc\ noDocks\ shipToDeliver\ destinations\ no
comment2.target=WareHouse(java.lang.String,\ float[],\ int,\ int,\ float[][],\ int)
comment2.text=\n\ This\ constructor\ is\ used\ for\ testing\ purposes\ only.\ This\ is\ a\ constructor\ for\ a\ warehouse.\n
comment3.params=
comment3.target=java.lang.String\ log_status()
comment3.text=\n\ Logs\ the\ status\ of\ the\ warehouse\n\ @return\ line\ status\ of\ the\ warehouse\n
comment4.params=
comment4.target=void\ action()
comment4.text=\n\ Performs\ loading\ and\ unloading\ operations\ at\ all\ loading\ stations,\ one\ package\ at\ a\ clock\ cycle\n
comment5.params=num
comment5.target=void\ generateLoadingDecks(int)
comment5.text=\n\ Generates\ i\ number\ of\ loading\ docks\n\ @param\ num\ number\ of\ loading\ decks\ to\ be\ generated\n\ this\ method\ should\ be\ called\ only\ once\ when\ the\ warehouse\ setup\ is\ being\ simulated\ at\ the\ beginning\n
comment6.params=
comment6.target=int\ hasSpace()
comment6.text=\n\ Determines\ if\ the\ WareHouse\ can\ take\ in\ one\ additional\ truck\n\ @return\ int\ the\ position\ of\ the\ empty\ loading\ deck.\ If\ all\ decks\ are\ occupied,\ -1\ is\ returned\n
comment7.params=noShip\ no
comment7.target=void\ generateShipments(int,\ int)
comment7.text=\n\ Generates\ an\ array\ based\ stack\ of\ shipments\ at\ the\ beginning\ while\ the\ warehouse\ is\ being\ created\n\ @param\ noShip\ number\ of\ shipments\ to\ be\ delivered\ to\ be\ generated\n
comment8.params=truck
comment8.target=void\ addTruck(Truck)
comment8.text=\n\ Adds\ a\ truck\ to\ the\ warehouse,\ either\ to\ the\ wait\ line\ or\ to\ the\ loading\ deck\n\ @param\ truck\ truck\ to\ be\ added\ to\ the\ warehouse\n
comment9.params=
comment9.target=ArrayBasedStack\ getToDeliver()
comment9.text=\n\ Retutns\ the\ toDeliver\ array\ based\ stack\n\ @return\ ArrayBasedStack\ toDeliver\n
numComments=14
